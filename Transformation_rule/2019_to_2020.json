[
  {
    "path": { "walkers": "jsonschema-2019-09" },
    "condOperMapper": [
      {
        "conditions": [
          { "isKey": { "key": "$recursiveAnchor" } }
        ],
        "operations": {
          "updateValue": {
            "value": "anchor"
          },
          "editKey": {
            "key": "$dynamicAnchor"
          }
        }
      },
      {
        "conditions": [
          { "isKey": { "key": "$recursiveRef" } }
        ],
        "operations": {
          "updateValue": {
            "value": "#anchor"
          },
          "editKey": {
            "key": "$dynamicRef"
          }
        }
      },
      {
        "conditions": [
          { "isKey": { "key": "items" } }
        ],
        "operations": {
          "editKey": {
            "key": "prefixItems"
          }
        }
      },
      {
        "conditions": [
          { "isKey": { "key": "additionalItems" } }
        ],
        "operations": {
          "editKey": {
            "key": "items"
          }
        }
      },
      {
        "conditions": [
          { "isKey": { "key": "$schema" } }
        ],
        "operations": {
          "updateValue": {
            "value": "https://json-schema.org/draft/2020-12/schema"
          }
        }
      }
    ]
  },
  {
    "path": { "walkers": "jsonschema-2020-12" },
    "condOperMapper": [
      {
        "conditions": [
          { "isKey": { "key": "$ref" }, "valuePattern": ".*\\bitems\\b.*" },
          { "isKey": { "key": "$ref" }, "valuePattern": ".*\\badditionalItems\\b.*" }
        ],
        "operations": {
          "valueIterator": {
            "targetValue": { "getFragmentUri": null },
            "type": "string",
            "splitBy": "/",
            "defineStorage": {
              "path": {
                "current": { "getConcatinate": [{ "getUriWithoutFragment": null }, "#"] },
                "updater": [
                  {
                    "conditions": [
                      { "isEqual": { "value1": "items", "value2": { "getStorage": "_$value_" } } },
                      { "isValidPath": { "getConcatinate": [{ "getStorage": "path" }, "/", "prefixItems"] } }
                    ],
                    "getters": {
                      "getConcatinate": [{ "getStorage": "path" }, "/prefixItems"]
                    }
                  },
                  {
                    "conditions": [
                      { "isEqual": { "value1": "additionalItems", "value2": { "getStorage": "_$value_" } } },
                      { "isValidPath": { "getConcatinate": [{ "getStorage": "path" }, "/", "items"] } }
                    ],
                    "getters": {
                      "getConcatinate": [{ "getStorage": "path" }, "/items"]
                    }
                  },
                  { "getters": { "getConcatinate": [{ "getStorage": "path" }, "/", { "getStorage": "_$value_" }] } }
                ]
              }
            },
            "operations": {
              "updateValue": { "value": { "getStorage": "path" } }
            }
          }
        }
      }
    ]
  }
]
